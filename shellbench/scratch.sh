ksh93 -c set -e --\012setup() { :; }\012cleanup() { :; }\012__finished() { cleanup; echo $(($__count-1)) >&3 2>/dev/null; }\012__count=0\012trap : PIPE\012if [ "${ZSH_VERSION:-}" ]; then\012  trap "__finished; __finished() { :; }; exit 1" TERM\012else\012  trap "exit 1" TERM\012fi\012trap "__finished" EXIT\012\012# shellbench -c -s zsh,ksh93,bash,dash shellbench/overhead.unset.sh\012# -----------------------------------------------------------------------------\012# name                                     zsh      ksh93       bash       dash\012# -----------------------------------------------------------------------------\012# [null loop]                          871,862    897,762    353,081    235,471\012# overhead.unset.sh: assign null     4,935,458  5,663,748  1,418,928    523,738\012# overhead.unset.sh: ^, unset -v       368,677  3,021,347    292,369    216,464\012# overhead.unset.sh: define noop     2,654,274  5,760,505  1,176,415  5,888,517\012# overhead.unset.sh: ^, unset -f       370,598  1,267,916    296,475    375,490\012# overhead.unset.sh: function call     219,778  1,534,934    277,731    253,557\012# overhead.unset.sh: local assign      184,946    535,492    142,682    144,589\012# -----------------------------------------------------------------------------\012# * count: number of executions per second\012#\012#\012# Differencials in microseconds (Âµs):\012# -----------------------------------------------------------------------------\012#          (1000000/n)                     zsh      ksh93       bash       dash\012# -----------------------------------------------------------------------------\012#     (unset -v)-(assign null)            2.51       0.15       2.72       2.71\012#     (unset -f)-(define noop)            2.32       0.62       2.52       2.49\012# (local assign)-(function call)          0.86       1.22       3.41       2.97\012# -----------------------------------------------------------------------------\012\012setup\012if (eval '[ "${.sh.version}" ]' 2>/dev/null)\012then eval 'function fun { typeset var; var=; }'\012else fun() { local var; var=; }\012fi\012__ready=\012trap __ready=1 HUP\012kill -HUP "$MAIN_PID"\012until [ "$__ready" ]; do __dummy=; done\012while __count=$(($__count+1)); do\012__CORRECTION_MODE=\012fun\012done
